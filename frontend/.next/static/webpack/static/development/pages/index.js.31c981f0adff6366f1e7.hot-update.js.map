{"version":3,"file":"static/webpack/static/development/pages/index.js.31c981f0adff6366f1e7.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { All_ITEMS_QUERY, ALL_ITEMS_QUERY } from \"./Items\";\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\n\nclass DeleteItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  update = (cache, payload) => {\n    // manually update cache on client so it matches server\n\n    // 1. Read cache for items we want (run All_ITEMS_QUERY)\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n\n    // 2. Filter the deleted item out of page.\n    data.items = data.items.filter(\n      item => item.id !== payload.data.deleteItem.id\n    );\n\n    // 3. Put items back\n\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_ITEM_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n      >\n        {(deleteItem, { error }) => (\n          <button\n            onClick={() => {\n              if (confirm(\"Are you sure you want to delete this item?\")) {\n                deleteItem();\n              }\n            }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAlBA;AAFA;AAGA;AACA;;;AAgBA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;;;;AAzCA;AACA;AA2CA;;;;A","sourceRoot":""}